#!/usr/bin/perl
# Copyright (c) 2015 Dylan B Storey

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
use warnings;
use strict;
use Getopt::Long;
use POSIX qw/ceil/;
use File::Basename;
use File::Copy;

my @files;
my $chunk_size = 90000;

GetOptions(
	'files=s@{,}' => \@files,
	'chunk=i' => \$chunk_size) || die $!;

my $slice_size = ceil($chunk_size ** 0.5)/2;
my @sublists = ();

while (@files){
	push @sublists , [splice(@files,0,$slice_size)];
	}

my $sublist_count = scalar @sublists;

my @file_lists = ();

for (my $i = 0 ; $i < $sublist_count ; $i++){
        for (my $j = $i ; $j < $sublist_count ; $j++){
                push @file_lists ,[@{$sublists[$i]} , @{$sublists[$j]}];
                }
        }

map {
        @{$_}= keys { map { $_ => 1 } @{$_} };
        } @file_lists;

my $chunk_counter = 1;



print STDOUT "STARTING TO PRINT MANIFESTS\n";

map{
#	open (OUT , '>' , "$chunk_counter.manifest") || die $!;
	mkdir("Chunk\_$chunk_counter");
	map{
		my $filename = fileparse($_);
		$filename = "Chunk\_$chunk_counter/$filename";
#		print OUT "$filename" . "\n";
		copy($_ , $filename) || die "Copy of $_ to $filename failed!";
		}@{$_};	
#	close OUT;

	$chunk_counter++;
	}@file_lists;






exit;
